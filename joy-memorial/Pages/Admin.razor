@using joy_database.Repositories
@using joy_database.Models
@using Ganss.Xss
@page "/admin"
@attribute [Authorize(Roles="Admin")]
@using Blazored.Video
@using Blazored.Video.Support
@inject StoryRepository StoryRepository

<h3>Story Feed</h3>

@foreach (var story in stories)
{
    <div class="story">
        <div class="story-header">
            <strong>@story.Name</strong>
        </div>
        <div class="story-text">
            <button class="btn-approve btn-success" @onclick="() => Approve(story)">✅</button>
            @((MarkupString)new HtmlSanitizer().Sanitize(story.Text))
            @foreach (var media in story.Media)
            {
                @if (media.Type == MediaType.Image)
                {
                    <img src="@media.Filename" height="300" />
                } else if (media.Type == MediaType.Video)
                {
                    <BlazoredVideo 
                                   style="height:300px;"
                                   controls="controls">
                        <source src="@media.Filename" type="video/mp4" />
                    </BlazoredVideo>
                }
            }
        </div>
    </div>
}

@code {
    private List<Story> stories;

    protected override async Task OnInitializedAsync()
    {
        await GetStories();
    }

    private async Task GetStories()
    {
        stories = await StoryRepository.GetAllUnApproved();
    }

    private async Task Approve(Story story)
    {
        await StoryRepository.Approve(story);
        await GetStories();
    }

}
